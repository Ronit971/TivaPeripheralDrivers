#define Set_Bit(x) |= 1<<x
#define Clr_Bit(x) &= ~(1<<x)

#define RCGCGPIO *( (unsigned int*)0x400FE608U )			// GPIO Run Mode Clock Gating Control Register

#define PORTD_BaseAddr 0x40007000U										// Base Address of GPIO Port D over APB Bus

#define DR      0x3FC																	// Offset for GPIO - Data Register
#define DEN     0x51C																	// Offset for GPIO - Digital Enable Register
#define DIR     0x400																	// Offset for GPIO - Direction Register


#define PD_DataRegister         *( (unsigned int*)(PORTD_BaseAddr + DR) )				// GPIO - Data Register
#define PD_DigitalEnable        *( (unsigned int*)(PORTD_BaseAddr + DEN) )			// GPIO - Digital Enable Register
#define PD_DataDirection        *( (unsigned int*)(PORTD_BaseAddr + DIR) )			// GPIO - Direction Register
	

#define one_x 10000000U									//	Single Delay count value
#define two_x 20000000U									//	Double Delay count value

void delay(unsigned long time);					//	Delay function

int main()
{
  RCGCGPIO Set_Bit(3);                  //	Enable Clock for PORT D
  
  PD_DataDirection Set_Bit(3);					//	Use PD3 as output pin
  PD_DigitalEnable Set_Bit(3);					//	Enable digital function on PD3
  
  PD_DataDirection Set_Bit(6);					//	Use PD6 as output pin
  PD_DigitalEnable Set_Bit(6);					//	Enable digital function on PD6
  
  while(1)															//	Infinite Loop
  {
    PD_DataRegister Set_Bit(3);					//	Write '1' (HIGH) to PD3	- Turn LED1 On
    delay(one_x);												//	Single delay
    PD_DataRegister Clr_Bit(3);					//	Write '0' (LOW)	to PD3	- Turn LED1 Off
    
    PD_DataRegister Set_Bit(6);					//	Write '1' (HIGH) to PD6	- Turn LED2 On
    delay(two_x);												//	Double delay
    PD_DataRegister Clr_Bit(6);					//	Write '0' (LOW)	to PD6	- Turn LED2 Off
  }
  
  return 0;
}

void delay(unsigned long time)								// Delay function
{
  for(unsigned long i = 0; i<time; i++);			//	Waste time by counting upto a particular number.
}

