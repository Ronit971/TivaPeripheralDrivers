
File Description
/******************************************************************************************************************
*	@file			-	
*	@author		-	Ronit Vairagi																																												*
*																																																									*
*	<description here>
*																																																									*
* @Note			-	All of the code present in the this file applies to TM4C123GH6PM microcontroller.										*
******************************************************************************************************************/

Function Description
/******************************************************************************************************************
* @fnName
* @brief	-
* @param	-
* @return	-
*																																																									*
* @Note		-
******************************************************************************************************************/


level-zero	multiline comments box
/******************************************************************************************************************
******************************************************************************************************************/

level-one	multiline comments box
/****************************************************************************************************************
****************************************************************************************************************/

level-two	multiline comments box
/**************************************************************************************************************
**************************************************************************************************************/

level-three	multiline comments box
/************************************************************************************************************
************************************************************************************************************/


/******************************************************************************************************************
*																								NEW PERIPHERAL SECTION																						*
******************************************************************************************************************/
//	x.1 Base Addresses
//	x.2 Clock Enable and Disable Macros
//	x.3 Register Definition
//	x.4 Module Access Pointers


/******************************************************************************************************************
*																					Pins Available for I2C Functions																				*
*		Module				SCL					SDA																																									*
*		I2C 0					PB2					PB3																																									*
*		I2C 1					PA6					PA7																																									*
*		I2C 2					PE4					PE5																																									*
*		I2C 3					PD0					PD1																																									*
******************************************************************************************************************/


// intr 1 code
#include "TM4C123xx.h"

uint16_t command[] = {0x0001, 0x0002, 0x0003, 0x0002 };

int main(void)
{
	UseLEDs();
	
	blink(LED_RED);
	
	SPIStart(SSI3, SSI_Master_Mode, SSI_InterruptRxFIFO);
	
	uint16_t recvcom[4] = {0,0,0,0};
	
	while(1)
	{
		SSISendData(SSI3, command, 64);
		SSIRecvWithIntr(SSI3, recvcom, 64);
		
		for( int i = 0; i<4; i++)
			switch(recvcom[i])
			{
				case 1:		WhiteLEDoff();
									blink(LED_GREEN);
									break;
			
				case 2:		WhiteLEDoff();
									blink(LED_BLUE);
									break;
			
				case 3:		WhiteLEDoff();
									blink(LED_RED);
									break;
			
				case 0:		TurnOn(LED_RED);
									break;
				
				default:	WhiteLEDon();
			}
	}
	
	return 0;
}

void SSI3_Handler(void)
{
	
}


// intr 2 code
#include "TM4C123xx.h"

uint16_t command[] = {0x0002, 0x0002, 0x0003, 0x0003 };

int main(void)
{
	UseLEDs();
	
	blink(LED_RED);
	
	SPIStart(SSI3, SSI_Slave_Mode_OutEn, SSI_InterruptRxFIFO);
	
	uint16_t recvcom[4] = {0,0,0,0};
		
	while(1)
	{		
		SSIRecvWithIntr(SSI3, recvcom, 64);
		for( int i = 0; i<4; i++)
			switch(recvcom[i])
			{
				case 1:		WhiteLEDoff();
									blink(LED_GREEN);
									break;
			
				case 2:		WhiteLEDoff();
									blink(LED_BLUE);
									break;
			
				case 3:		WhiteLEDoff();
									blink(LED_RED);
									break;
			
				case 0:		TurnOn(LED_RED);
									break;
				
				default:	WhiteLEDon();
			}
	}
	
	return 0;
}

void SSI3_Handler(void)
{
	SSIIntrRecv(SSI3);
	//SSISendData(SSI3, command, 64);
}











